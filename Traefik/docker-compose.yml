---
services:
  traefik:
    image: docker.io/library/traefik:v3.5.0
    container_name: traefik
    ports:
      - 80:80
      - 443:443
      # --> (Optional) Enable Dashboard, don't do in production
      # - 8080:8080
      # <--
    volumes:
      - /run/docker.sock:/run/docker.sock:ro
      - ${BASE_PATH}/traefik/config/:/etc/traefik/:ro
      - ${BASE_PATH}/traefik/certs/:/var/traefik/certs/:rw
    environment:
      - CF_DNS_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CF_DNS_API_EMAIL=${CLOUDFLARE_EMAIL_ADDRESS}
    command:
      # Provider
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=frontend
      - --providers.file.directory=/etc/traefik
      - --providers.file.watch=true
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # Lets Encrypt
      - --certificatesresolvers.cloudflare.acme.storage=/var/traefik/certs/cloudflare-acme.json
      - --certificatesresolvers.cloudflare.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      # HTTP/3
      - --entrypoints.websecure.http3
      # Logs
      - '--accesslog.filepath=${BASE_PATH}/treafik/logs/access.log'
      - '--accesslog.format=json'
      - '--log.filepath=${BASE_PATH}/treafik/logs/traefik.log'
      - '--log.format=json'
      - '--log.level=${TRAEFIK_LOG_LEVEL:-ERROR}'
      - '--metrics.prometheus.addrouterslabels'
      # Misc
      - --global.checknewversion=false
      - --global.sendanonymoususage=false
      - --api.dashboard=true
      - --api.insecure=false
      - --ping
      - --providers.file.directory=/dynamic_conf/
      - --providers.file.watch=true
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
    labels:
      # Set up Metrics
      - traefik.http.routers.metrics-http.entrypoints=web
      - traefik.http.routers.metrics-http.middlewares=traefik-auth,globalHeaders@file,redirect-to-https@docker,autodetect@docker,robotHeaders@file
      - traefik.http.routers.metrics-http.priority=20
      - traefik.http.routers.metrics-http.rule=Host(`metrics.${BASE_DOMAIN_NAME}`) && Path(`/prometheus`)
      - traefik.http.routers.metrics-http.service=prometheus@internal
      - traefik.http.routers.metrics.entrypoints=websecure
      - traefik.http.routers.metrics.middlewares=traefik-auth,globalHeaders@file,secureHeaders@file,autodetect@docker,robotHeaders@file
      - traefik.http.routers.metrics.priority=20
      - traefik.http.routers.metrics.rule=Host(`metrics.${BASE_DOMAIN_NAME}`) && Path(`/prometheus`)
      - traefik.http.routers.metrics.service=prometheus@internal
      - traefik.http.routers.metrics.tls=true
      - traefik.http.routers.metrics.tls.options=securetls@file
      # Set up for Dashboard
      - traefik.http.routers.traefik-http.entrypoints=web
      - traefik.http.routers.traefik-http.middlewares=globalHeaders@file,redirect-to-https@docker,autodetect@docker,robotHeaders@file
      - traefik.http.routers.traefik-http.priority=20
      - traefik.http.routers.traefik-http.rule=Host(`dash.${BASE_DOMAIN_NAME}`)
      - traefik.http.routers.traefik-internal.entrypoints=internal
      - traefik.http.routers.traefik-internal.rule=Host(`traefik`)
      - traefik.http.routers.traefik-internal.service=api@internal
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.middlewares=globalHeaders@file,secureHeaders@file,autodetect@docker,robotHeaders@file
      - traefik.http.routers.traefik.priority=20
      - traefik.http.routers.traefik.rule=Host(`dash.${BASE_DOMAIN_NAME}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=cfdns
      - traefik.http.routers.traefik.tls.domains[0].main=${BASE_DOMAIN_NAME}
      - traefik.http.routers.traefik.tls.domains[0].sans=*.${BASE_DOMAIN_NAME}
      - traefik.http.routers.traefik.tls.options=securetls@file
    networks:
      - frontend
    restart: unless-stopped
